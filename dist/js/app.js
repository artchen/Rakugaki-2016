!function(e){var t=(angular.module("rakugaki",["ngAnimate","ngTouch","ui.router"]),function(e,t,n){t.otherwise("/"),n.html5Mode({enabled:!0,requireBase:!1}),e.state("welcome",{url:"/",templateUrl:"/views/welcome.html",controller:"SlideController",data:{pageTitle:"Welcome",index:0}}).state("springtide",{url:"/springtide",templateUrl:"/views/springtide.html",controller:"SlideController",data:{pageTitle:"Springtide Press",index:1}}).state("shiro",{url:"/shiro",templateUrl:"/views/shiro.html",controller:"SlideController",data:{pageTitle:"Shiro",index:2}}).state("kcalb",{url:"/theme-kcalb",templateUrl:"/views/kcalb.html",controller:"SlideController",data:{pageTitle:"Kcalb",index:3,slug:"kcalb",name:"Kcalb",wp:"",ghost:"http://themeforest.net/item/kcalb-a-minimal-responsive-ghost-theme/7191057",demo:"http://kcalb.rakugaki.me"}}).state("yabu",{url:"/theme-yabu",templateUrl:"/views/yabu.html",controller:"SlideController",data:{pageTitle:"Yabu no Naka",index:4,slug:"yabu",name:"Yabu no Naka",wp:"https://sellfy.com/p/p8CR/",ghost:"http://themeforest.net/item/yabu-no-naka-a-responsive-ghost-theme/6813025",demo:"http://yabu.rakugaki.me"}}).state("about",{url:"/about",templateUrl:"/views/about.html",controller:"SlideController",data:{pageTitle:"About",index:5}})});t.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"],angular.module("rakugaki").config(t).run(["$rootScope","$state","$stateParams",function(e,t,n){e.$state=t,e.$stateParams=n}])}(jQuery,angular),function(e){var t=function(t,n,i,o,a,r){n.loaded=!1,n.slides=[{name:"Welcome",state:"welcome",index:0},{name:"Springtide",state:"springtide",index:1},{name:"Shiro",state:"shiro",index:2},{name:"Kcalb",state:"kcalb",index:3},{name:"Yabu no Naka",state:"yabu",index:4},{name:"About",state:"about",index:5}],n.currentSlide=0,n.numSlides=n.slides.length,n.transitionAnimation="init",n.inTransition=!1,n.modalShown=!1,n.sidebarShown=!1,n.infoWindowShown=!1,n.slideIndexShown=!1,n.safeApply=function(e,t){var n=this.$root.$$phase;"$apply"==n||"$digest"==n?e&&"function"==typeof e&&e():(this.$apply(e),t&&t())},n.gotoSlide=function(e,t){if(!n.modalShown&&!n.inTransition){if(o.$current.name==e)return n.closeInfoWindow(),void n.closePopup(t);n.inTransition=!0,n.closeInfoWindow(),n.closePopup(t),n.safeApply(function(){"init"!=n.transitionAnimation&&(n.transitionAnimation="init")}),i(function(){o.go(e)},320)}},n.nextSlide=function(){n.modalShown||n.inTransition||(n.inTransition=!0,n.closeInfoWindow(),n.safeApply(function(){"next"!=n.transitionAnimation&&(n.transitionAnimation="next")}),n.currentSlide===n.slides.length-1?n.currentSlide=0:n.currentSlide++,i(function(){o.go(n.slides[n.currentSlide].state)},100))},n.prevSlide=function(){n.modalShown||n.inTransition||(n.inTransition=!0,n.closeInfoWindow(),n.safeApply(function(){"prev"!=n.transitionAnimation&&(n.transitionAnimation="prev")}),0===n.currentSlide?n.currentSlide=n.slides.length-1:n.currentSlide--,i(function(){o.go(n.slides[n.currentSlide].state)},100))},n.openSidebar=function(t){t.stopPropagation(),t.preventDefault(),e(".nav-trigger").fadeOut(),e("#st-container").className="st-container",i(function(){n.sidebarShown=!0},25)},n.closePopup=function(t){t.stopPropagation(),n.sidebarShown&&(n.sidebarShown=!1,i(function(){e(".nav-trigger").fadeIn()},500)),n.slideIndexShown&&(n.slideIndexShown=!1,e(".slide-index").fadeOut())},n.prenventPropagation=function(e){e.stopPropagation()},n.openInfoWindow=function(){n.infoWindowShown=!0,e("#info-"+n.slides[n.currentSlide].state).addClass("show"),n.slideIndexShown=!1,e(".slide-index").fadeOut()},n.closeInfoWindow=function(){n.infoWindowShown=!1,e(".works-info").removeClass("show")},n.tapAnime=function(t,n){e(".plot").css("visibility","visible");var i=5;e(".plot").css("width","30px"),e(".plot").css("height","30px"),e(".plot").css("left",t-15+"px"),e(".plot").css("top",n-15+"px"),e(".plot").css({opacity:.3}),e(".plot").animate({opacity:0,height:"40px",width:"40px",left:"-="+i+"px",top:"-="+i+"px"},300,function(){e(".plot").css("visibility","hidden")})},n.initTapAnime=function(){e(".st-pusher, .trigger, .md-trigger, .md-modal").on("click",function(e){n.tapAnime(e.pageX,e.pageY)})},n.openSlideIndex=function(t){t.stopPropagation(),n.slideIndexShown=!0,e(".slide-index").fadeIn(),n.closeInfoWindow()},n.initPerfectScrollbar=function(){e(".works-info-content-wrapper, .slide-index").perfectScrollbar()},n.onKeydown=function(e){37==e.keyCode?n.prevSlide():39==e.keyCode&&n.nextSlide()},t.$on("$stateChangeSuccess",function(e,t,i){n.currentSlide=o.current.data.index}),n.$on("$includeContentLoaded",function(){n.initPerfectScrollbar()}),n.init=function(){i(function(){n.initTapAnime(),n.loaded=!0},100)},n.init()};t.$inject=["$rootScope","$scope","$timeout","$state","$stateParams","$window"],angular.module("rakugaki").controller("MainController",t)}(jQuery,angular),function(e){var t=function(t,n,i,o,a,r){n.modal={slug:"",name:"",wp:"",ghost:"",show:!1},n.iframeSource="",n.iframeSetip=!1,n.openModal=function(){n.$parent.modalShown=!0,e(".slide-nav, .info-trigger, .nav-trigger").fadeOut(),n.modal.show=!0,i(function(){n.setupIframe()},320)},n.closeModal=function(){n.$parent.modalShown=!1,n.modal.show=!1,i(function(){e(".slide-nav, .info-trigger, .nav-trigger").fadeIn()},500)},n.initKeyControl=function(){e(document).keydown(function(t){if("textarea"!==t.target.type&&"text"!==t.target.type){var n=t.keyCode||t.which;switch(n){case 27:e(".md-close").click()}}})},n.initLogoAnimations=function(){e(".bamboo").hover(function(){e(".bamboo .trigger").addClass("shake")},function(){e(".bamboo .trigger").removeClass("shake")}),e("#kcalb-logo").hover(function(){e("#kcalb .logo").addClass("bounce")},function(){e("#kcalb .logo").removeClass("bounce")}),e("#springtide-logo").hover(function(){e(this).addClass("tada")},function(){e(this).removeClass("tada")})},n.prenventPropagation=function(e){e.stopPropagation()},n.preventDefault=function(e){e.preventDefault()},n.setupIframe=function(){n.iframeSetup||(n.iframeSetup=!0,n.iframeSource=r.trustAsResourceUrl(n.modal.demo))},n.initPerfectScrollbar=function(){e(".resume-wrapper").perfectScrollbar()},n.init=function(){n.initPerfectScrollbar(),n.initLogoAnimations(),n.initKeyControl(),i(function(){n.$parent.inTransition=!1},320),i(function(){"yabu"!=o.current.name&&"kcalb"!=o.current.name||(n.modal={slug:o.current.data.slug,name:o.current.data.name,wp:o.current.data.wp,ghost:o.current.data.ghost,demo:o.current.data.demo,show:!1})},500)},n.init()};t.$inject=["$rootScope","$scope","$timeout","$state","$stateParams","$sce"],angular.module("rakugaki").controller("SlideController",t)}(jQuery,angular),function(e){var t=function(e,t,n){return function(i,o,a){var r=a.staticInclude;e.get(r,{cache:t}).success(function(e){var t=o.html(e).contents();n(t)(i)})}};t.$inject=["$http","$templateCache","$compile"];var n=function(e,t){return{link:function(n,i){var o=function(e,n,o,a,r){var l="Rakugaki";n.data&&n.data.pageTitle&&(l="Rakugaki / "+n.data.pageTitle),t(function(){i.text(l)})};e.$on("$stateChangeStart",o)}}};n.$inject=["$rootScope","$timeout"],angular.module("rakugaki").directive("staticInclude",t).directive("pageTitle",n)}(jQuery,angular);
//# sourceMappingURL=data:application/json;base64,
